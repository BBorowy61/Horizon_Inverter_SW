# Generated by Code Composer Studio

# Makefile for C:\Users\ppeluso\Documents\Consulting\Makanai\Solstice\DPCB-7\Software\PV Gen II 2812.pjt
# This makefile is intended to be compatible with any version of make.
#
# USAGE
# Step 1: Set up proper environment variables, by running DosRun.bat
#         (Windows platform) or set them up by yourself.
# Step 2: Change directory to the directory of this makefile, which is stored
#         in the macro MAKEFILE_DIR
# Step 3: In the makefile directory, you can perform one of these operations:
#         To build the configuration <config>, type make <config>
#         To clean the configuration <config>, type make <config>clean
#         To rebuild the configuration <config>, type make <config>rebuild
#         If <config> is not specified, the operations apply to the active
#         configuration, which is stored in the macro ACTIVE_CONFIG.
# For CCS gmake users: In the makefile directory, you can perform one of these operations:
#         To build the configuration <config>, type gmake projectName.mak <config>
#         To clean the configuration <config>, type gmake <config>clean
#         To rebuild the configuration <config>, type gmake <config>rebuild
#         If <config> is not specified, the operations apply to the active
#         configuration, which is stored in the macro ACTIVE_CONFIG.
#
# DETAILS
# Step 1:
#   In order for this makefile to work, you must have the environment variables
# set properly.  Specifically, the paths to build programs and the system-wide
# header files and library files must be set.
#   In Windows, a batch file "DosRun.bat", located at the root directory of
# the Code Composer Studio installation, is provided to set up these variables.
#   In UNIX, you can set up these environment variables yourself.  The "PATH"
# variable must include the paths to the build programs, and the "C_DIR" and
# "A_DIR" variables must include the paths to the system-wide header files and
# library files.
#
# Step 2:
#   System files referenced by this project are specified in full path names,
# while other files in this project are specified in path names relative to the
# directory of this makefile.  These directory names are stored in DIR_x macros.
# You can modify them to reflect the locations of the files on this system.
#   It is important that the command to make this makefile is issued from the
# directory of this makefile, which is stored in the macro MAKEFILE_DIR.
#
# Step 3:
#   There are three operations that can be performed on a build configuration:
# make, clean, and rebuild. A rebuild forces all files in the configuration to
# be rebuilt.
# To build the configuration <config>, type make <config>
# To clean the configuration <config>, type make <config>clean
# To rebuild the configuration <config>, type make <config>rebuild
#   If <config> is not specified, the operations apply to the active
# configuration. The active configuration can be any valid build configuration
# (including "all") and is specified in the macro ACTIVE_CONFIG.
# To build the active configuration, type make
# To clean the active configuration, type make clean
# To rebuild the active configuration, type make rebuild
#
# For CCS gmake users:
#   There are three operations that can be performed on a build configuration:
# make, clean, and rebuild. A rebuild forces all files in the configuration to
# be rebuilt.
# To build the configuration <config>, type gmake projectName.mak <config>
# To clean the configuration <config>, type gmake <config>clean
# To rebuild the configuration <config>, type gmake <config>rebuild
#   If <config> is not specified, the operations apply to the active
# configuration. The active configuration can be any valid build configuration
# (including "all") and is specified in the macro ACTIVE_CONFIG.
# To build the active configuration, type gmake
# To clean the active configuration, type gmake clean
# To rebuild the active configuration, type gmake rebuild

# The MKFLAGS macro takes the place of the MFLAGS or MAKEFLAGS macro. If it
# gives you any trouble, just delete the macro. It is used when recursively
# calling make (i.e. when rebuilding)
MKFLAGS= $(MFLAGS)$(MAKEFLAGS)

MAKEFILE_DIR= C:/Users/ppeluso/Documents/Consulting/Makanai/Solstice/DPCB-7/Software

# The active configuration can be one of these valid build configurations:
# all, Debug
ACTIVE_CONFIG= Debug

# These DIR_x macros store the directories of the files used in this project.
# There must be no trailing spaces after these macros.

DIR_1= Debug

DIR_2= C:/Users/ppeluso/CCSv3.3_cgt/C2000/cgtools/bin

DIR_3= Flash2812_API_V210/include

DIR_4= Flash2812_API_V210/lib

SOURCE=avg_fbk.c
SOURCE=background.c
SOURCE=board_test.c
SOURCE=diagdata.c
SOURCE=fault.c
SOURCE=$(DIR_4)/Flash2812_API_V210.lib
SOURCE=flt_que.c
SOURCE=functions.c
SOURCE=handler_funcs.c
SOURCE=hardware.c
SOURCE=main.c
SOURCE=mppt.c
SOURCE=oper.c
SOURCE=paramcalc.c
SOURCE=paramtable.c
SOURCE=pll.c
SOURCE=prgmflash.c
SOURCE=pwm_int.c
SOURCE=receive.c
SOURCE=regulator.c
SOURCE=rtc.c
SOURCE=sci.c
SOURCE=simulate.c
SOURCE=slow_task.c
SOURCE=start.asm
SOURCE=transmit.c
SOURCE=utils.c
SOURCE=main.cmd

active_config: $(ACTIVE_CONFIG)

norecurse: $(ACTIVE_CONFIG)_norecurse

clean: $(ACTIVE_CONFIG)clean

clean_norecurse: $(ACTIVE_CONFIG)clean_norecurse

rebuild: $(ACTIVE_CONFIG)rebuild

force_rebuild: 

all: Debug 

allclean: Debugclean 

allrebuild: Debugrebuild 


Debugclean: Debugclean_norecurse

Debugclean_norecurse: 
	-@rm -f $(DIR_1)/avg_fbk.obj
	-@rm -f $(DIR_1)/background.obj
	-@rm -f $(DIR_1)/board_test.obj
	-@rm -f $(DIR_1)/diagdata.obj
	-@rm -f $(DIR_1)/fault.obj
	-@rm -f $(DIR_1)/flt_que.obj
	-@rm -f $(DIR_1)/functions.obj
	-@rm -f $(DIR_1)/handler_funcs.obj
	-@rm -f $(DIR_1)/hardware.obj
	-@rm -f $(DIR_1)/main.obj
	-@rm -f $(DIR_1)/mppt.obj
	-@rm -f $(DIR_1)/oper.obj
	-@rm -f $(DIR_1)/paramcalc.obj
	-@rm -f $(DIR_1)/paramtable.obj
	-@rm -f $(DIR_1)/pll.obj
	-@rm -f $(DIR_1)/prgmflash.obj
	-@rm -f $(DIR_1)/pwm_int.obj
	-@rm -f $(DIR_1)/receive.obj
	-@rm -f $(DIR_1)/regulator.obj
	-@rm -f $(DIR_1)/rtc.obj
	-@rm -f $(DIR_1)/sci.obj
	-@rm -f $(DIR_1)/simulate.obj
	-@rm -f $(DIR_1)/slow_task.obj
	-@rm -f $(DIR_1)/start.obj
	-@rm -f $(DIR_1)/transmit.obj
	-@rm -f $(DIR_1)/utils.obj
	-@rm -f $(DIR_1)/main.out
	-@rm -f avg_fbk.a28
	-@rm -f background.a28
	-@rm -f board_test.a28
	-@rm -f diagdata.a28
	-@rm -f fault.a28
	-@rm -f flt_que.a28
	-@rm -f functions.a28
	-@rm -f handler_funcs.a28
	-@rm -f hardware.a28
	-@rm -f main.a28
	-@rm -f mppt.a28
	-@rm -f oper.a28
	-@rm -f paramcalc.a28
	-@rm -f paramtable.a28
	-@rm -f pll.a28
	-@rm -f prgmflash.a28
	-@rm -f pwm_int.a28
	-@rm -f receive.a28
	-@rm -f regulator.a28
	-@rm -f rtc.a28
	-@rm -f sci.a28
	-@rm -f simulate.a28
	-@rm -f slow_task.a28
	-@rm -f start.a28
	-@rm -f transmit.a28
	-@rm -f utils.a28

Debugrebuild: 
	$(MAKE) $(MFLAGS) -f Makefile.mak Debug FRC=force_rebuild

Debug: Debug_norecurse

Debug_norecurse: $(DIR_1)/main.out



$(DIR_1)/avg_fbk.obj: $(FRC) avg_fbk.c 2812reg.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "avg_fbk.c" 

$(DIR_1)/background.obj: $(FRC) background.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "background.c" 

$(DIR_1)/board_test.obj: $(FRC) board_test.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "board_test.c" 

$(DIR_1)/diagdata.obj: $(FRC) diagdata.c io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "diagdata.c" 

$(DIR_1)/fault.obj: $(FRC) fault.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "fault.c" 

$(DIR_1)/flt_que.obj: $(FRC) flt_que.c faults.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "flt_que.c" 

$(DIR_1)/functions.obj: $(FRC) functions.c 2812reg.h literals.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "functions.c" 

$(DIR_1)/handler_funcs.obj: $(FRC) handler_funcs.c 2812reg.h io_def.h literals.h modbus.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "handler_funcs.c" 

$(DIR_1)/hardware.obj: $(FRC) hardware.c 2812reg.h io_def.h literals.h modbus.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "hardware.c" 

$(DIR_1)/main.obj: $(FRC) main.c 2812reg.h faults.h fpga_1303.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "main.c" 

$(DIR_1)/mppt.obj: $(FRC) mppt.c 2812reg.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "mppt.c" 

$(DIR_1)/oper.obj: $(FRC) oper.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "oper.c" 

$(DIR_1)/paramcalc.obj: $(FRC) paramcalc.c 2812reg.h faults.h init_tables.h io_def.h literals.h slow_update.c struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "paramcalc.c" 

$(DIR_1)/paramtable.obj: $(FRC) paramtable.c faults.h literals.h struct.h write_params.c 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "paramtable.c" 

$(DIR_1)/pll.obj: $(FRC) pll.c 2812reg.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "pll.c" 

$(DIR_1)/prgmflash.obj: $(FRC) prgmflash.c 2812reg.h $(DIR_3)/Flash281x_API_Library.h io_def.h literals.h struct.h $(DIR_3)/Flash281x_API_Config.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "prgmflash.c" 

$(DIR_1)/pwm_int.obj: $(FRC) pwm_int.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "pwm_int.c" 

$(DIR_1)/receive.obj: $(FRC) receive.c 2812reg.h literals.h modbus.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "receive.c" 

$(DIR_1)/regulator.obj: $(FRC) regulator.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "regulator.c" 

$(DIR_1)/rtc.obj: $(FRC) rtc.c 2812reg.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "rtc.c" 

$(DIR_1)/sci.obj: $(FRC) sci.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "sci.c" 

$(DIR_1)/simulate.obj: $(FRC) simulate.c 2812reg.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "simulate.c" 

$(DIR_1)/slow_task.obj: $(FRC) slow_task.c 2812reg.h faults.h io_def.h literals.h struct.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "slow_task.c" 

$(DIR_1)/start.obj: $(FRC) start.asm 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr$(MAKEFILE_DIR)/$(DIR_1)"" -d"_DEBUG"  -v28 "start.asm" 

$(DIR_1)/transmit.obj: $(FRC) transmit.c 2812reg.h literals.h modbus.h 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "transmit.c" 

$(DIR_1)/utils.obj: $(FRC) utils.c 
	"$(DIR_2)/cl2000" -g -ss -eaa28 -fr"$(MAKEFILE_DIR)/$(DIR_1)" -d"_DEBUG"  -v28 "utils.c" 

$(DIR_1)/main.out: $(FRC) main.cmd $(DIR_1)/avg_fbk.obj $(DIR_1)/background.obj $(DIR_1)/board_test.obj $(DIR_1)/diagdata.obj $(DIR_1)/fault.obj $(DIR_1)/flt_que.obj $(DIR_1)/functions.obj $(DIR_1)/handler_funcs.obj $(DIR_1)/hardware.obj $(DIR_1)/main.obj $(DIR_1)/mppt.obj $(DIR_1)/oper.obj $(DIR_1)/paramcalc.obj $(DIR_1)/paramtable.obj $(DIR_1)/pll.obj $(DIR_1)/prgmflash.obj $(DIR_1)/pwm_int.obj $(DIR_1)/receive.obj $(DIR_1)/regulator.obj $(DIR_1)/rtc.obj $(DIR_1)/sci.obj $(DIR_1)/simulate.obj $(DIR_1)/slow_task.obj $(DIR_1)/start.obj $(DIR_1)/transmit.obj $(DIR_1)/utils.obj $(DIR_4)/Flash2812_API_V210.lib 
	-@echo -z -a -farheap0 -f0FFFFh -heap0 -m'"./Debug/PV Gen II 2812.map"' -o'"./Debug/main.out"' -stack128 -s -w -x -i"C:/Users/ppeluso/CCSv3.3_cgt/c2000/cgtools/lib" -l"rts2800.lib"> Makefile.Debug.lkf
	-@echo "main.cmd">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/avg_fbk.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/background.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/board_test.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/diagdata.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/fault.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/flt_que.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/functions.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/handler_funcs.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/hardware.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/main.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/mppt.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/oper.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/paramcalc.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/paramtable.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/pll.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/prgmflash.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/pwm_int.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/receive.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/regulator.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/rtc.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/sci.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/simulate.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/slow_task.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/start.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/transmit.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_1)/utils.obj">> Makefile.Debug.lkf
	-@echo "$(DIR_4)/Flash2812_API_V210.lib">> Makefile.Debug.lkf
	"$(DIR_2)/cl2000" -@"Makefile.Debug.lkf"
	-@rm -f Makefile.Debug.lkf
